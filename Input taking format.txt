#include <bits/stdc++.h>
using namespace std;

int v[1000];
long long dp[1000][1000];

long long sum(int i, int j){
    long long ans =0;
    for(int k =i; k<=j; k++){
        ans +=v[k];
        ans %=100;
    }
    return ans;
}

long long solve(int i, int j){
    if(i>=j) return 0;
    if(dp[i][j]!=-1) return dp[i][j];
    dp[i][j] = INT_MAX;
    for(int k=i; k<=j; k++){
        dp[i][j] = min(dp[i][j], solve(i,k) + solve(k+1,j) + (sum(i,k)*sum(k+1,j)));
    }
    return dp[i][j];
}

int main()
{
    int n;
    while(scanf("%d",&n)==1)
    {
    memset(dp,-1,sizeof(dp));
    for(int i=0; i<n;i++) cin>>v[i];
    cout<<solve(0,n-1)<<'\n';
    }
    return 0;
}
